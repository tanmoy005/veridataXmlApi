// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VERIDATA.DAL.DBContext;

#nullable disable

namespace VERIDATA.DAL.Migrations
{
    [DbContext(typeof(DbContextDalDB))]
    [Migration("20240112094006_newapiconfig add")]
    partial class newapiconfigadd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VERIDATA.Model.Table.Activity.ActivityMaster", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("activity_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<string>("ActivityCode")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("activity_code");

                    b.Property<string>("ActivityColor")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("activity_color");

                    b.Property<string>("ActivityInfo")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("activity_info");

                    b.Property<string>("ActivityName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("activity_name");

                    b.Property<string>("ActivityType")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("activity_type");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("ActivityId");

                    b.ToTable("activity_master", "activity");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Activity.ActivityTransaction", b =>
                {
                    b.Property<int>("ActivityTransId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("activity_trans_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityTransId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasColumnName("activity_id");

                    b.Property<long?>("AppointeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("appointee_id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("ActivityTransId");

                    b.ToTable("activity_transaction", "activity");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Activity.AppointeeDetailsUpdateActivity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("activity_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int>("AppointeeId")
                        .HasColumnType("int")
                        .HasColumnName("appointee_id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("update_type");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("update_value");

                    b.HasKey("ActivityId");

                    b.ToTable("appointee_update_activity", "activity");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.ActionMaster", b =>
                {
                    b.Property<int>("ActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("action_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActionId"));

                    b.Property<string>("ActionAlias")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("alias");

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("action_name");

                    b.Property<string>("ActionType")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("action_type");

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.HasKey("ActionId");

                    b.ToTable("menu_action_master", "admin");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.CompanyInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company_city");

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("company_address");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("company_name");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<int?>("NoDocUpldReq")
                        .HasColumnType("int")
                        .HasColumnName("no_doc_upld_req");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("Id");

                    b.ToTable("company", "admin");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.EmailEscalationCaseMaster", b =>
                {
                    b.Property<int>("CaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("case_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CaseId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("SetupAlias")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("setup_alias");

                    b.Property<string>("SetupCode")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("setup_code");

                    b.Property<string>("SetupDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("setup_desc");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("CaseId");

                    b.ToTable("escalation_case_master", "admin");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.EmailEscalationSetupMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("setup_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int>("CaseId")
                        .HasColumnType("int")
                        .HasColumnName("case_id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email_id");

                    b.Property<int>("LevelId")
                        .HasColumnType("int")
                        .HasColumnName("level_id");

                    b.Property<bool?>("SetupStatus")
                        .HasColumnType("bit")
                        .HasColumnName("setup_option");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<int?>("level_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("level_id");

                    b.ToTable("escalation_setup", "admin", t =>
                        {
                            t.Property("level_id")
                                .HasColumnName("level_id1");
                        });
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.EscalationLevelEmailMapping", b =>
                {
                    b.Property<int>("EmailMapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("map_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmailMapId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<int>("LevelId")
                        .HasColumnType("int")
                        .HasColumnName("level_id");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<int?>("level_id")
                        .HasColumnType("int");

                    b.HasKey("EmailMapId");

                    b.HasIndex("level_id");

                    b.ToTable("escaltionlevel_email_mapping", "admin", t =>
                        {
                            t.Property("level_id")
                                .HasColumnName("level_id1");
                        });
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.EscalationLevelMaster", b =>
                {
                    b.Property<int>("LevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("level_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("LevelCode")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("level_code");

                    b.Property<string>("LevelName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("level_name");

                    b.Property<int?>("NoOfDays")
                        .HasColumnType("int")
                        .HasColumnName("no_of_days");

                    b.Property<string>("SetupAlias")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("setup_alias");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("LevelId");

                    b.ToTable("escalationlevel_master", "admin");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.GeneralSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<int?>("CriticalNoOfDays")
                        .HasColumnType("int")
                        .HasColumnName("critical_no_days");

                    b.Property<int?>("GracePeriod")
                        .HasColumnType("int")
                        .HasColumnName("grace_period_days");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("Id");

                    b.ToTable("generalSetup", "admin");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.MenuActionMapping", b =>
                {
                    b.Property<int>("MenuMappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("mapping_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuMappingId"));

                    b.Property<int>("ActionId")
                        .HasColumnType("int")
                        .HasColumnName("action_id");

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("menu_id");

                    b.HasKey("MenuMappingId");

                    b.ToTable("menu_action_mapping", "admin");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.MenuMaster", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("menu_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("MenuAlias")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("menu_alias");

                    b.Property<string>("MenuDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("menu_desc");

                    b.Property<string>("MenuTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("menu_title");

                    b.Property<int>("ParentMenuId")
                        .HasColumnType("int")
                        .HasColumnName("parent_menu_id");

                    b.Property<int>("SeqNo")
                        .HasColumnType("int")
                        .HasColumnName("seq_no");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<string>("menu_action")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("menu_action");

                    b.Property<string>("menu_icon_url")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("menu_icon_url");

                    b.Property<int>("menu_level")
                        .HasColumnType("int")
                        .HasColumnName("menu_level");

                    b.HasKey("MenuId");

                    b.ToTable("menu_master", "admin");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.MenuRoleMapping", b =>
                {
                    b.Property<int>("MenuRoleMapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("menu_role_map_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuRoleMapId"));

                    b.Property<int>("ActionId")
                        .HasColumnType("int")
                        .HasColumnName("action_id");

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<int>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("menu_id");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<int?>("menu_id")
                        .HasColumnType("int");

                    b.Property<int?>("role_id")
                        .HasColumnType("int");

                    b.HasKey("MenuRoleMapId");

                    b.HasIndex("menu_id");

                    b.HasIndex("role_id");

                    b.ToTable("menu_role_mapping", "admin", t =>
                        {
                            t.Property("menu_id")
                                .HasColumnName("menu_id1");

                            t.Property("role_id")
                                .HasColumnName("role_id1");
                        });
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.RoleUserMapping", b =>
                {
                    b.Property<long>("RoleUserMapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("role_user_map_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RoleUserMapId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<int?>("role_id")
                        .HasColumnType("int");

                    b.Property<long?>("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("RoleUserMapId");

                    b.HasIndex("role_id");

                    b.HasIndex("user_id");

                    b.ToTable("role_user_mapping", "admin", t =>
                        {
                            t.Property("role_id")
                                .HasColumnName("role_id1");

                            t.Property("user_id")
                                .HasColumnName("user_id1");
                        });
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.UserAuthentication", b =>
                {
                    b.Property<long>("UserAuthoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("user_autho_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserAuthoId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("IsDefaultPass")
                        .HasColumnType("char")
                        .HasColumnName("is_default_pass");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<string>("UserProfilePwd")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_profile_pwd");

                    b.Property<string>("UserPwd")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_pwd");

                    b.Property<string>("UserPwdTxt")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("user_pwd_txt");

                    b.Property<long?>("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("UserAuthoId");

                    b.HasIndex("user_id");

                    b.ToTable("user_authentication", "admin", t =>
                        {
                            t.Property("user_id")
                                .HasColumnName("user_id1");
                        });
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.UserAuthenticationHist", b =>
                {
                    b.Property<int>("AuthoHistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("autho_hist_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthoHistId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<string>("BrowserName")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("browser_name");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("client_id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<DateTime?>("EntryTime")
                        .HasColumnType("datetime")
                        .HasColumnName("entry_time");

                    b.Property<string>("ExitStatus")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("exit_status");

                    b.Property<DateTime?>("ExitTime")
                        .HasColumnType("datetime")
                        .HasColumnName("exit_time");

                    b.Property<string>("GIPAddress")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gip_address");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ip_address");

                    b.Property<string>("Otp")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("otp_no");

                    b.Property<string>("TokenNo")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("token_no");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<long?>("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("AuthoHistId");

                    b.HasIndex("user_id");

                    b.ToTable("user_authentication_hist", "admin", t =>
                        {
                            t.Property("user_id")
                                .HasColumnName("user_id1");
                        });
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.UserMaster", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<string>("CandidateId")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("candidate_id");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact_no");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<bool?>("CurrStatus")
                        .HasColumnType("bit")
                        .HasColumnName("cur_status");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email_id");

                    b.Property<long?>("RefAppointeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("ref_appointee_id");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_code");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("users_name");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int")
                        .HasColumnName("user_type_id");

                    b.Property<int?>("role_id")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("role_id");

                    b.ToTable("user_master", "admin", t =>
                        {
                            t.Property("role_id")
                                .HasColumnName("role_id1");
                        });
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Config.ApiCounter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApiName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("api_name");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("payload");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("api_status");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("api_type");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("api_url");

                    b.HasKey("Id");

                    b.ToTable("api_couter_log", "config");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Config.ApiLogs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("log_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AppointeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("appointeeId");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("MethodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("method_name");

                    b.Property<string>("MethodType")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("method_type");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("payload");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.ToTable("api_logs", "config");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Config.AppointeeUpdateLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AppointeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("appointee_id");

                    b.Property<string>("CandidateId")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("candidate_id");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("UpdateType")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("update_type");

                    b.Property<string>("UpdateValue")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("update_value");

                    b.HasKey("Id");

                    b.ToTable("appointee_update_log", "config");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Config.CustomError", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("log_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("log_date");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("log_info");

                    b.HasKey("Id");

                    b.ToTable("error_logs", "config");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Config.Logs", b =>
                {
                    b.Property<long>("AppointeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("log_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AppointeeId"));

                    b.Property<string>("Arguments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("arguments");

                    b.Property<string>("CallSite")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("call_site");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("category");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("level");

                    b.Property<string>("LineNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("line_number");

                    b.Property<DateTime?>("LogDate")
                        .HasColumnType("datetime")
                        .HasColumnName("log_date");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stack_trace");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.HasKey("AppointeeId");

                    b.ToTable("logs", "config");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Master.DisabilityMaster", b =>
                {
                    b.Property<int>("DisabilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("disability_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisabilityId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("DisabilityCode")
                        .HasColumnType("char")
                        .HasColumnName("disability_code");

                    b.Property<string>("DisabilityName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("disability_name");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("DisabilityId");

                    b.ToTable("disability_master", "master");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Master.GenderMaster", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("gender_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("GenderCode")
                        .HasColumnType("char")
                        .HasColumnName("gender_code");

                    b.Property<string>("GenderName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("gender_name");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("GenderId");

                    b.ToTable("gender_master", "master");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Master.MaritalStatusMaster", b =>
                {
                    b.Property<int>("MStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("mstatus_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MStatusId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("MStatusCode")
                        .HasColumnType("char")
                        .HasColumnName("mstatus_code");

                    b.Property<string>("MStatusName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("mstatus_name");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("MStatusId");

                    b.ToTable("marital_status_master", "master");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Master.NationilityMaster", b =>
                {
                    b.Property<int>("NationilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("nationility_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationilityId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("NationName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nation_name");

                    b.Property<string>("NationilityName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nationility_name");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("NationilityId");

                    b.ToTable("nationility_master", "master");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Master.QualificationMaster", b =>
                {
                    b.Property<int>("QualificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("qualification_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QualificationId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("QualificationCode")
                        .HasColumnType("char")
                        .HasColumnName("qualification_code");

                    b.Property<string>("QualificationName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("qualification_name");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("QualificationId");

                    b.ToTable("qualification_master", "master");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Master.ReasonMaser", b =>
                {
                    b.Property<int>("ReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("reason_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReasonId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("ReasonCategory")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("reason_category");

                    b.Property<string>("ReasonCode")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("reason_code");

                    b.Property<string>("ReasonName")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("reason_info");

                    b.Property<string>("ReasonRemedy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reason_remedy");

                    b.Property<string>("ReasonType")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("reason_type");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("ReasonId");

                    b.ToTable("reason_master", "master");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Master.RoleMaster", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<bool?>("IsCompanyAdmin")
                        .HasColumnType("bit")
                        .HasColumnName("is_company_admin");

                    b.Property<string>("RoleDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("role_desc");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role_name");

                    b.Property<string>("RolesAlias")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("roles_alias");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("RoleId");

                    b.ToTable("role_master", "master");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Master.UploadTypeMaster", b =>
                {
                    b.Property<int>("UploadTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("upload_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UploadTypeId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<string>("UploadTypeCode")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("upload_type_code");

                    b.Property<string>("UploadTypeDesc")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("upload_type_desc");

                    b.Property<string>("UploadTypeName")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("upload_type_name");

                    b.HasKey("UploadTypeId");

                    b.ToTable("upload_type_master", "master");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Master.UserTypes", b =>
                {
                    b.Property<int>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserTypeId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<string>("UserTypeDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_type_desc");

                    b.Property<string>("UserTypeName")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_type_name");

                    b.HasKey("UserTypeId");

                    b.ToTable("user_types", "master");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Master.WorkFlowStateMaster", b =>
                {
                    b.Property<long>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("state_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("StateId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<int?>("SeqOfFLow")
                        .HasColumnType("int")
                        .HasColumnName("seq_of_flow");

                    b.Property<string>("StateAlias")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("state_alias");

                    b.Property<string>("StateDecs")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("state_decs");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("state_name");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("StateId");

                    b.ToTable("workflow_state_master", "master");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Master.WorkflowApprovalStatusMaster", b =>
                {
                    b.Property<long>("AppvlStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("appvl_status_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AppvlStatusId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<string>("AppvlStatusCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("appvl_status_code");

                    b.Property<string>("AppvlStatusDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("appvl_status_desc");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("AppvlStatusId");

                    b.ToTable("workflow_approval_status_master", "master");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.AppointeeDetails", b =>
                {
                    b.Property<long>("AppointeeDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("appointee_details_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AppointeeDetailsId"));

                    b.Property<string>("AadhaarName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("aadhaar_name");

                    b.Property<string>("AadhaarNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("aadhaar_number");

                    b.Property<string>("AadhaarNumberView")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("aadhaar_number_view");

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<string>("AppointeeEmailId")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("appointee_email");

                    b.Property<long>("AppointeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("appointee_id");

                    b.Property<string>("AppointeeName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("appointee_name");

                    b.Property<string>("CandidateId")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("candidate_id");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company_name");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime")
                        .HasColumnName("date_of_birth");

                    b.Property<DateTime?>("DateOfJoining")
                        .HasColumnType("datetime")
                        .HasColumnName("joining_date");

                    b.Property<string>("DobFromAadhaar")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("dob_from_aadhaar");

                    b.Property<decimal>("EPFWages")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("epf_wages");

                    b.Property<string>("FathersNameFromPan")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fathers_name_from_pan");

                    b.Property<string>("Gender")
                        .HasColumnType("char")
                        .HasColumnName("gender");

                    b.Property<string>("GenderFromAadhaar")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gender_from_aadhaar");

                    b.Property<string>("HandicapeType")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("handicape_type");

                    b.Property<bool?>("IsAadhaarVarified")
                        .HasColumnType("bit")
                        .HasColumnName("is_aadhaarvarified");

                    b.Property<string>("IsHandicap")
                        .HasColumnType("char")
                        .HasColumnName("is_handicap");

                    b.Property<string>("IsInternationalWorker")
                        .HasColumnType("char")
                        .HasColumnName("is_internationalworker");

                    b.Property<bool?>("IsPFverificationReq")
                        .HasColumnType("bit")
                        .HasColumnName("is_pf_verification_req");

                    b.Property<bool?>("IsPanVarified")
                        .HasColumnType("bit")
                        .HasColumnName("is_panvarified");

                    b.Property<string>("IsPassportAvailable")
                        .HasColumnType("char")
                        .HasColumnName("is_passportAvailable");

                    b.Property<bool?>("IsPasssportVarified")
                        .HasColumnType("bit")
                        .HasColumnName("is_passportvarified");

                    b.Property<bool?>("IsPensionApplicable")
                        .HasColumnType("bit")
                        .HasColumnName("is_pensionapplicable");

                    b.Property<bool?>("IsProcessed")
                        .HasColumnType("bit")
                        .HasColumnName("is_processed");

                    b.Property<bool?>("IsSave")
                        .HasColumnType("bit")
                        .HasColumnName("is_save");

                    b.Property<bool?>("IsSubmit")
                        .HasColumnType("bit")
                        .HasColumnName("is_submit");

                    b.Property<bool?>("IsTrustPassbook")
                        .HasColumnType("bit")
                        .HasColumnName("is_trustpassbook");

                    b.Property<bool?>("IsUanVarified")
                        .HasColumnType("bit")
                        .HasColumnName("is_uanvarified");

                    b.Property<string>("MaratialStatus")
                        .HasColumnType("char")
                        .HasColumnName("maratialstatus");

                    b.Property<string>("MemberName")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("member_name");

                    b.Property<string>("MemberRelation")
                        .HasColumnType("char")
                        .HasColumnName("member_relation");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("mobile_no");

                    b.Property<string>("NameFromAadhaar")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name_from_aadhaar");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nationality");

                    b.Property<string>("OriginCountry")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("origincountry");

                    b.Property<string>("PANName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("pan_name");

                    b.Property<string>("PANNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("pan_number");

                    b.Property<string>("PassportFileNo")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("passport_fileno");

                    b.Property<string>("PassportNo")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("passport_no");

                    b.Property<DateTime?>("PassportValidFrom")
                        .HasColumnType("datetime")
                        .HasColumnName("passport_validfrom");

                    b.Property<DateTime?>("PassportValidTill")
                        .HasColumnType("datetime")
                        .HasColumnName("passport_validtill");

                    b.Property<int?>("ProcessStatus")
                        .HasColumnType("int")
                        .HasColumnName("process_status");

                    b.Property<string>("Qualification")
                        .HasColumnType("char")
                        .HasColumnName("qualification");

                    b.Property<int?>("SaveStep")
                        .HasColumnType("int")
                        .HasColumnName("save_step");

                    b.Property<string>("UANNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("uan_number");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<long?>("appointee_id")
                        .HasColumnType("bigint");

                    b.Property<int?>("company_id")
                        .HasColumnType("int");

                    b.Property<string>("lvl1Email")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("level1_email");

                    b.Property<string>("lvl2Email")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("level2_email");

                    b.Property<string>("lvl3Email")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("level3_email");

                    b.HasKey("AppointeeDetailsId");

                    b.HasIndex("appointee_id");

                    b.HasIndex("company_id");

                    b.ToTable("appointee_details", t =>
                        {
                            t.Property("appointee_id")
                                .HasColumnName("appointee_id1");

                            t.Property("company_id")
                                .HasColumnName("company_id1");
                        });
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.AppointeeIdGen", b =>
                {
                    b.Property<int>("SeqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("seq_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeqId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("SeqDesc")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("seq_desc");

                    b.Property<long>("SeqNo")
                        .HasColumnType("bigint")
                        .HasColumnName("seq_no");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("SeqId");

                    b.ToTable("appointee_id_gen");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.AppointeeMaster", b =>
                {
                    b.Property<long>("AppointeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("appointee_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AppointeeId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<string>("AppointeeEmailId")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("appointee_email");

                    b.Property<string>("AppointeeName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("appointee_name");

                    b.Property<string>("CandidateId")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("candidate_id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<DateTime?>("DateOfJoining")
                        .HasColumnType("datetime")
                        .HasColumnName("joining_date");

                    b.Property<long>("FileId")
                        .HasColumnType("bigint")
                        .HasColumnName("file_id");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("mobile_no");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("AppointeeId");

                    b.ToTable("appointee_master");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.AppointeeReasonMappingData", b =>
                {
                    b.Property<long>("AppointeeReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("appointee_reason_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AppointeeReasonId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<long>("AppointeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("appointee_id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<int>("ReasonId")
                        .HasColumnType("int")
                        .HasColumnName("reason_id");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remarks");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<long?>("appointee_id")
                        .HasColumnType("bigint");

                    b.HasKey("AppointeeReasonId");

                    b.HasIndex("appointee_id");

                    b.ToTable("appointee_reason_details", t =>
                        {
                            t.Property("appointee_id")
                                .HasColumnName("appointee_id1");
                        });
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.AppointeeUploadDetails", b =>
                {
                    b.Property<long>("UploadDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("upload_det_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UploadDetailsId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<long>("AppointeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("appointee_id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("file_name");

                    b.Property<string>("IsPathRefered")
                        .HasColumnType("VARCHAR(1)")
                        .HasColumnName("is_path_refered");

                    b.Property<string>("MimeType")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("mime_type");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<string>("UploadPath")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("upload_path");

                    b.Property<string>("UploadSubTypeCode")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("upload_subtype");

                    b.Property<string>("UploadTypeCode")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("upload_type_code");

                    b.Property<int>("UploadTypeId")
                        .HasColumnType("int")
                        .HasColumnName("upload_type_id");

                    b.Property<long?>("appointee_id")
                        .HasColumnType("bigint");

                    b.Property<int?>("company_id")
                        .HasColumnType("int");

                    b.Property<int?>("upload_type_id")
                        .HasColumnType("int");

                    b.HasKey("UploadDetailsId");

                    b.HasIndex("appointee_id");

                    b.HasIndex("company_id");

                    b.HasIndex("upload_type_id");

                    b.ToTable("upload_details", t =>
                        {
                            t.Property("appointee_id")
                                .HasColumnName("appointee_id1");

                            t.Property("upload_type_id")
                                .HasColumnName("upload_type_id1");
                        });
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.ProcessedFileData", b =>
                {
                    b.Property<long>("ProcessedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("processed_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProcessedId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<long?>("AppointeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("appointee_id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<bool?>("DataUploaded")
                        .HasColumnType("bit")
                        .HasColumnName("data_uploaded");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<long?>("appointee_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("file_id")
                        .HasColumnType("bigint");

                    b.HasKey("ProcessedId");

                    b.HasIndex("appointee_id");

                    b.HasIndex("file_id");

                    b.ToTable("processed_file_data", t =>
                        {
                            t.Property("appointee_id")
                                .HasColumnName("appointee_id1");
                        });
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.RawFileData", b =>
                {
                    b.Property<long>("RawFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("rawfile_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RawFileId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<string>("AppointeeEmailId")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("appointee_email");

                    b.Property<string>("AppointeeName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("appointee_name");

                    b.Property<string>("CandidateId")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("candidate_id");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company_name");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<DateTime?>("DateOfJoining")
                        .HasColumnType("datetime")
                        .HasColumnName("joining_date");

                    b.Property<string>("DateOfOffer")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("offer_date");

                    b.Property<decimal?>("EPFWages")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("epf_wages");

                    b.Property<long>("FileId")
                        .HasColumnType("bigint")
                        .HasColumnName("file_id");

                    b.Property<bool?>("IsPFverificationReq")
                        .HasColumnType("bit")
                        .HasColumnName("is_pf_verification_req");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("mobile_no");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<int?>("company_id")
                        .HasColumnType("int");

                    b.Property<long?>("file_id")
                        .HasColumnType("bigint");

                    b.Property<string>("lvl1Email")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("level1_email");

                    b.Property<string>("lvl2Email")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("level2_email");

                    b.Property<string>("lvl3Email")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("level3_email");

                    b.HasKey("RawFileId");

                    b.HasIndex("company_id");

                    b.HasIndex("file_id");

                    b.ToTable("raw_file_data", t =>
                        {
                            t.Property("company_id")
                                .HasColumnName("company_id1");

                            t.Property("file_id")
                                .HasColumnName("file_id1");
                        });
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.RawFileHistoryData", b =>
                {
                    b.Property<long>("RawFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("rawfile_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RawFileId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<string>("AppointeeEmailId")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("appointee_email");

                    b.Property<string>("AppointeeName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("appointee_name");

                    b.Property<string>("CandidateId")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("candidate_id");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company_name");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<DateTime?>("DateOfJoining")
                        .HasColumnType("datetime")
                        .HasColumnName("joining_date");

                    b.Property<string>("DateOfOffer")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("offer_date");

                    b.Property<decimal?>("EPFWages")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("epf_wages");

                    b.Property<long>("FileId")
                        .HasColumnType("bigint")
                        .HasColumnName("file_id");

                    b.Property<bool?>("IsPFverificationReq")
                        .HasColumnType("bit")
                        .HasColumnName("is_pf_verification_req");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("mobile_no");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<string>("lvl1Email")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("level1_email");

                    b.Property<string>("lvl2Email")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("level2_email");

                    b.Property<string>("lvl3Email")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("level3_email");

                    b.HasKey("RawFileId");

                    b.ToTable("raw_file_history_data");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.RejectedFileData", b =>
                {
                    b.Property<long>("RejectedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("rejected_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RejectedId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<long?>("AppointeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("appointee_id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("RejectReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reject_reason");

                    b.Property<int>("RejectState")
                        .HasColumnType("int")
                        .HasColumnName("reject_state");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<long?>("appointee_id")
                        .HasColumnType("bigint");

                    b.HasKey("RejectedId");

                    b.HasIndex("appointee_id");

                    b.ToTable("rejected_file_data", t =>
                        {
                            t.Property("appointee_id")
                                .HasColumnName("appointee_id1");
                        });
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.UnProcessedFileData", b =>
                {
                    b.Property<long>("UnProcessedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("unprocessed_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UnProcessedId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<string>("AppointeeEmailId")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("appointee_email");

                    b.Property<string>("AppointeeName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("appointee_name");

                    b.Property<string>("CandidateId")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("candidate_id");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company_name");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<DateTime?>("DateOfJoining")
                        .HasColumnType("datetime")
                        .HasColumnName("joining_date");

                    b.Property<DateTime?>("DateOfOffer")
                        .HasColumnType("datetime")
                        .HasColumnName("offer_date");

                    b.Property<decimal?>("EPFWages")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("epf_wages");

                    b.Property<long>("FileId")
                        .HasColumnType("bigint")
                        .HasColumnName("file_id");

                    b.Property<bool?>("IsPFverificationReq")
                        .HasColumnType("bit")
                        .HasColumnName("is_pf_verification_req");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("mobile_no");

                    b.Property<string>("PeopleManager")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("people_manager");

                    b.Property<string>("RecruitmentHR")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("recruitment_hr");

                    b.Property<string>("UnprocessReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reason_to_unprocess");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<int?>("company_id")
                        .HasColumnType("int");

                    b.Property<long?>("file_id")
                        .HasColumnType("bigint");

                    b.Property<string>("lvl1Email")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("level1_email");

                    b.Property<string>("lvl2Email")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("level2_email");

                    b.Property<string>("lvl3Email")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("level3_email");

                    b.HasKey("UnProcessedId");

                    b.HasIndex("company_id");

                    b.HasIndex("file_id");

                    b.ToTable("unprocessed_file_data", t =>
                        {
                            t.Property("company_id")
                                .HasColumnName("company_id1");

                            t.Property("file_id")
                                .HasColumnName("file_id1");
                        });
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.UnderProcessFileData", b =>
                {
                    b.Property<long>("UnderProcessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("underprocess_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UnderProcessId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<string>("AppointeeEmailId")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("appointee_email");

                    b.Property<long?>("AppointeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("appointee_id");

                    b.Property<string>("AppointeeName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("appointee_name");

                    b.Property<string>("CandidateId")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("candidate_id");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company_name");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<DateTime?>("DateOfJoining")
                        .HasColumnType("datetime")
                        .HasColumnName("joining_date");

                    b.Property<DateTime?>("DateOfOffer")
                        .HasColumnType("datetime")
                        .HasColumnName("offer_date");

                    b.Property<decimal?>("EPFWages")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("epf_wages");

                    b.Property<long>("FileId")
                        .HasColumnType("bigint")
                        .HasColumnName("file_id");

                    b.Property<bool?>("IsPFverificationReq")
                        .HasColumnType("bit")
                        .HasColumnName("is_pf_verification_req");

                    b.Property<bool?>("IsProcessed")
                        .HasColumnType("bit")
                        .HasColumnName("is_processed");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("mobile_no");

                    b.Property<string>("PeopleManager")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("people_manager");

                    b.Property<string>("RecruitmentHR")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("recruitment_hr");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<int?>("company_id")
                        .HasColumnType("int");

                    b.Property<long?>("file_id")
                        .HasColumnType("bigint");

                    b.Property<string>("lvl1Email")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("level1_email");

                    b.Property<string>("lvl2Email")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("level2_email");

                    b.Property<string>("lvl3Email")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("level3_email");

                    b.HasKey("UnderProcessId");

                    b.HasIndex("company_id");

                    b.HasIndex("file_id");

                    b.ToTable("under_process_file_data", t =>
                        {
                            t.Property("company_id")
                                .HasColumnName("company_id1");

                            t.Property("file_id")
                                .HasColumnName("file_id1");
                        });
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.UploadAppointeeCounter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<long?>("FileId")
                        .HasColumnType("bigint")
                        .HasColumnName("file_id");

                    b.HasKey("Id");

                    b.ToTable("upload_appointee_counter");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.UploadedXSLfile", b =>
                {
                    b.Property<long>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("file_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FileId"));

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("file_name");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("file_path");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("FileId");

                    b.ToTable("uploaded_xls_file");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.WorkFlowDetails", b =>
                {
                    b.Property<long>("WorkFlowDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("work_flow_det_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("WorkFlowDetId"));

                    b.Property<DateTime?>("ActionTakenAt")
                        .HasColumnType("datetime")
                        .HasColumnName("action_taken_at");

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<long>("AppointeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("appointee_id");

                    b.Property<int>("AppvlStatusId")
                        .HasColumnType("int")
                        .HasColumnName("appvl_status_id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remarks");

                    b.Property<int?>("ReprocessCount")
                        .HasColumnType("int")
                        .HasColumnName("reprocess_count");

                    b.Property<string>("StateAlias")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("state_alias");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint")
                        .HasColumnName("state_id");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("WorkFlowDetId");

                    b.ToTable("workflow_details");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.WorkFlowDetailsHist", b =>
                {
                    b.Property<long>("WorkFlowHistDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("work_flow_det_hist_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("WorkFlowHistDetId"));

                    b.Property<DateTime?>("ActionTakenAt")
                        .HasColumnType("datetime")
                        .HasColumnName("action_taken_at");

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit")
                        .HasColumnName("active_status");

                    b.Property<long>("AppointeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("appointee_id");

                    b.Property<int>("AppvlStatusId")
                        .HasColumnType("int")
                        .HasColumnName("appvl_status_id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remarks");

                    b.Property<int?>("ReprocessCount")
                        .HasColumnType("int")
                        .HasColumnName("reprocess_count");

                    b.Property<string>("StateAlias")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("state_alias");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint")
                        .HasColumnName("state_id");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.HasKey("WorkFlowHistDetId");

                    b.ToTable("workflow_details_hist");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.EmailEscalationSetupMapping", b =>
                {
                    b.HasOne("VERIDATA.Model.Table.Admin.EscalationLevelMaster", null)
                        .WithMany("EmailEscalationSetupMapping")
                        .HasForeignKey("level_id");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.EscalationLevelEmailMapping", b =>
                {
                    b.HasOne("VERIDATA.Model.Table.Admin.EscalationLevelMaster", null)
                        .WithMany("EscalationLevelEmailMapping")
                        .HasForeignKey("level_id");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.MenuRoleMapping", b =>
                {
                    b.HasOne("VERIDATA.Model.Table.Admin.MenuMaster", null)
                        .WithMany("MenuRoleMapping")
                        .HasForeignKey("menu_id");

                    b.HasOne("VERIDATA.Model.Table.Master.RoleMaster", null)
                        .WithMany("MenuRoleMapping")
                        .HasForeignKey("role_id");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.RoleUserMapping", b =>
                {
                    b.HasOne("VERIDATA.Model.Table.Master.RoleMaster", null)
                        .WithMany("RoleUserMapping")
                        .HasForeignKey("role_id");

                    b.HasOne("VERIDATA.Model.Table.Admin.UserMaster", null)
                        .WithMany("RoleUserMapping")
                        .HasForeignKey("user_id");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.UserAuthentication", b =>
                {
                    b.HasOne("VERIDATA.Model.Table.Admin.UserMaster", null)
                        .WithMany("UserAuthentication")
                        .HasForeignKey("user_id");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.UserAuthenticationHist", b =>
                {
                    b.HasOne("VERIDATA.Model.Table.Admin.UserMaster", null)
                        .WithMany("UserAuthenticationHist")
                        .HasForeignKey("user_id");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.UserMaster", b =>
                {
                    b.HasOne("VERIDATA.Model.Table.Master.RoleMaster", null)
                        .WithMany("UserMaster")
                        .HasForeignKey("role_id");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.AppointeeDetails", b =>
                {
                    b.HasOne("VERIDATA.Model.Table.Public.AppointeeMaster", null)
                        .WithMany("AppointeeDetails")
                        .HasForeignKey("appointee_id");

                    b.HasOne("VERIDATA.Model.Table.Admin.CompanyInfo", null)
                        .WithMany("AppointeeDetails")
                        .HasForeignKey("company_id");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.AppointeeReasonMappingData", b =>
                {
                    b.HasOne("VERIDATA.Model.Table.Public.AppointeeMaster", null)
                        .WithMany("AppointeeReasonMappingData")
                        .HasForeignKey("appointee_id");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.AppointeeUploadDetails", b =>
                {
                    b.HasOne("VERIDATA.Model.Table.Public.AppointeeMaster", null)
                        .WithMany("AppointeeUploadDetails")
                        .HasForeignKey("appointee_id");

                    b.HasOne("VERIDATA.Model.Table.Admin.CompanyInfo", null)
                        .WithMany("AppointeeUploadDetails")
                        .HasForeignKey("company_id");

                    b.HasOne("VERIDATA.Model.Table.Master.UploadTypeMaster", null)
                        .WithMany("AppointeeUploadDetails")
                        .HasForeignKey("upload_type_id");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.ProcessedFileData", b =>
                {
                    b.HasOne("VERIDATA.Model.Table.Public.AppointeeMaster", null)
                        .WithMany("ProcessedFileData")
                        .HasForeignKey("appointee_id");

                    b.HasOne("VERIDATA.Model.Table.Public.UploadedXSLfile", null)
                        .WithMany("ProcessedFileData")
                        .HasForeignKey("file_id");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.RawFileData", b =>
                {
                    b.HasOne("VERIDATA.Model.Table.Admin.CompanyInfo", null)
                        .WithMany("RawFileData")
                        .HasForeignKey("company_id");

                    b.HasOne("VERIDATA.Model.Table.Public.UploadedXSLfile", null)
                        .WithMany("RawFileData")
                        .HasForeignKey("file_id");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.RejectedFileData", b =>
                {
                    b.HasOne("VERIDATA.Model.Table.Public.AppointeeMaster", null)
                        .WithMany("RejectedFileData")
                        .HasForeignKey("appointee_id");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.UnProcessedFileData", b =>
                {
                    b.HasOne("VERIDATA.Model.Table.Admin.CompanyInfo", null)
                        .WithMany("UnProcessedFileData")
                        .HasForeignKey("company_id");

                    b.HasOne("VERIDATA.Model.Table.Public.UploadedXSLfile", null)
                        .WithMany("UnProcessedFileData")
                        .HasForeignKey("file_id");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.UnderProcessFileData", b =>
                {
                    b.HasOne("VERIDATA.Model.Table.Admin.CompanyInfo", null)
                        .WithMany("UnderProcessFileData")
                        .HasForeignKey("company_id");

                    b.HasOne("VERIDATA.Model.Table.Public.UploadedXSLfile", null)
                        .WithMany("UnderProcessFileData")
                        .HasForeignKey("file_id");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.CompanyInfo", b =>
                {
                    b.Navigation("AppointeeDetails");

                    b.Navigation("AppointeeUploadDetails");

                    b.Navigation("RawFileData");

                    b.Navigation("UnProcessedFileData");

                    b.Navigation("UnderProcessFileData");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.EscalationLevelMaster", b =>
                {
                    b.Navigation("EmailEscalationSetupMapping");

                    b.Navigation("EscalationLevelEmailMapping");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.MenuMaster", b =>
                {
                    b.Navigation("MenuRoleMapping");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Admin.UserMaster", b =>
                {
                    b.Navigation("RoleUserMapping");

                    b.Navigation("UserAuthentication");

                    b.Navigation("UserAuthenticationHist");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Master.RoleMaster", b =>
                {
                    b.Navigation("MenuRoleMapping");

                    b.Navigation("RoleUserMapping");

                    b.Navigation("UserMaster");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Master.UploadTypeMaster", b =>
                {
                    b.Navigation("AppointeeUploadDetails");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.AppointeeMaster", b =>
                {
                    b.Navigation("AppointeeDetails");

                    b.Navigation("AppointeeReasonMappingData");

                    b.Navigation("AppointeeUploadDetails");

                    b.Navigation("ProcessedFileData");

                    b.Navigation("RejectedFileData");
                });

            modelBuilder.Entity("VERIDATA.Model.Table.Public.UploadedXSLfile", b =>
                {
                    b.Navigation("ProcessedFileData");

                    b.Navigation("RawFileData");

                    b.Navigation("UnProcessedFileData");

                    b.Navigation("UnderProcessFileData");
                });
#pragma warning restore 612, 618
        }
    }
}
